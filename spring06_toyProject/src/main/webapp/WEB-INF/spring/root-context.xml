<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<bean id="dataSource" class="oracle.jdbc.pool.OracleDataSource">
		<property name="user" value="ADMIN"/>
		<property name="password" value="Qwer1234qwer"/>
		<property name="URL" value="jdbc:oracle:thin:@pclass_high?TNS_ADMIN=C:/CODE/e_servlet/Wallet_PCLASS"/>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	  <property name="dataSource" ref="dataSource"/>
	  <property name="configLocation" value="classpath:mybatis/config.xml"/>
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 메일 발송을 위해 추가해야하는 bean : JavaMailSenderImpl -->
	<bean id="javaMailSenderImpl" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="username" value="medibook90@gmail.com"/>
		<property name="password" value="Qwer1234qwer"/>
		<property name="host" value="smtp.gmail.com"/>
		<property name="port" value="587"/>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
	
	<bean id="simpleClientHttpRequestFactory"
			class="org.springframework.http.client.SimpleClientHttpRequestFactory">
		<property name="readTimeout" value="5000"/>
		<property name="connectTimeout" value="5000"/>
	</bean>
	
	<bean id="restTemplate"
			class="org.springframework.web.client.RestTemplate">
		<constructor-arg name="requestFactory" ref="simpleClientHttpRequestFactory"></constructor-arg>
	</bean>
	
	<!-- thread safe 하기 때문에 bean으로 등록해 싱글튼으로 사용할 수 있다. -->
	<bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>
	
	<!-- 비밀번호 암호화 : DelegatingPasswordEncoder -->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.factory.PasswordEncoderFactories" factory-method="createDelegatingPasswordEncoder"/>
	
	<!-- 파일 업로드/다운로드 : CommonsMultipartResolver -->
	<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
		<property name="maxInMemorySize" value="10485760"/> <!-- 10MB -->
		<property name="maxUploadSize" value="10485760"/>
	</bean>
	
	<!-- 추후 Service가 트랜잭션 관리를 위한 프록시객체 생성의 인터페이스로, Mapper로서도 등록되면 문제가 생긴다. -->
	<mybatis-spring:scan base-package="com.kh.spring" annotation="org.apache.ibatis.annotations.Mapper"/>
	
</beans>
