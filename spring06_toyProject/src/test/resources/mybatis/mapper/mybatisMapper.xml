<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- 매핑과 인터페이스 방식을 모두 사용할 때는 namespace를 꼭 Repository 인터페이스 풀네임으로 맞춰줘야 잘 작동된다. -->
  <mapper namespace="com.kh.spring.mybatis.MybatisRepository">
  	
  	<!-- 
  		#{} vs ${}
  		#{} : PreparedStatement에서 쿼리템플릿을 완성시킨 다음, 파라미터값을 전달받아 쿼리를 완성
  			  문자열 이스케이프처리가 자동으로 된다. => SQL injection 공격에 안전하다.
  		${} : 쿼리템플릿이 생성되는 시점에 파라미터로 전달된 값을 사용해서 쿼리템플릿을 완성
  			  문자열 이스케이프처리가 되지 않음 => SQL injection 공격에 취햑하다.
  	 -->
  	
  	<resultMap type="map" id="rentData">
  		<!-- 
  			column : map에 담을 컬럼명
  			javaType : map에 어떤 타입의 데이터로 저장할 지 결정
  			property : map에 담을 때 사용할 키값
  		 -->
  		<result column="user_id" javaType="string" property="userId"/>
  		<result column="rm_idx" javaType="string" property="rmIdx"/>
  		<result column="rb_idx" javaType="string" property="rbIdx"/>
  		<result column="rent_book_cnt" javaType="int" property="rentBookCnt"/>
  		<result column="bk_idx" javaType="string" property="bkIdx"/>
  		<result column="rentable_date" javaType="date" property="rentableDate"/>
  	</resultMap>
  	
  	<select id="selectRentBookByUserId" resultMap="rentData">
  		select *
  		from member
  		inner join rent_master using(user_id)
  		inner join rent_book using(rm_idx)
  		where user_id = #{userId}
  	</select>
  	
  	<insert id="procedureUseTypeHandler">
  		{call sp_rent_insert(
  			#{userId, mode=IN}
  			,#{title, mode=IN}
  			,#{rentBookCnt, mode=IN}
  			,#{bkIdxs, mode=IN, typeHandler=com.kh.spring.common.mybatis.BkIdxsTypeHandler}
  		)}
  	</insert>
  	
  	<resultMap type="map" id="bookData">
  		<result column="bk_idx" javaType="string" property="bkIdx"/>
  		<result column="isbn" javaType="string" property="isbn"/>
  		<result column="category" javaType="string" property="category"/>
  		<result column="title" javaType="string" property="title"/>
  		<result column="author" javaType="string" property="author"/>
  		<result column="info" javaType="string" property="info"/>
  		<result column="book_amt" javaType="int" property="bookAmt"/>
  		<result column="reg_date" javaType="date" property="regDate"/>
  		<result column="rent_cnt" javaType="int" property="rentCnt"/>
  	</resultMap>
  	
  	<select id="test04" resultMap="bookData">
  		select rownum, V.*
  		from (select * from book order by rent_cnt desc) V
  		where rownum &lt;= 3
  	</select>
  	
  	<select id="dynamicIf" resultType="map">
  		select * from book where
  		<if test="filter == 'info'">
  			info like '%'||#{keyword}||'%'
  		</if>
  		<if test="filter == 'author'">
  			author like '%'||#{keyword}||'%'
  		</if>
  	</select>
  	
  	
  	
  	<select id="dynamicChoose" resultType="map">
  		select * from book where
  		<choose>
  			<when test="filter == 'info'">
  				info like '%'||#{keyword}||'%'
  			</when>
  			<when test="filter == 'author'">
  				author like '%'||#{keyword}||'%'
  			</when>
  			<otherwise>
  				title like '%'||#{keyword}||'%'
  			</otherwise>
  		</choose>
  	</select>
  	
  	<select id="dynamicForeachAndWhereTag" resultType="map">
  		select * from book
  		<where>
	  		<foreach collection="filters" item="filter">
	  			<if test="filter == 'title'">
	  				or title like '%'||#{keyword}||'%'
	  			</if>
	  			<if test="filter == 'author'">
	  				or author like '%'||#{keyword}||'%'
	  			</if>
	  			<if test="filter == 'info'">
	  				or info like '%'||#{keyword}||'%'
	  			</if>
	  		</foreach>
  		</where>
  	</select>
  	
  	<select id="test05" resultType="map">
  		select * from book
  		<where>
  			<foreach collection="filters" item="filter">
  				<if test="filter == 'title'">
	  				and title like '%'||#{keyword}||'%'
	  			</if>
	  			<if test="filter == 'author'">
	  				and author like '%'||#{keyword}||'%'
	  			</if>
	  			<if test="filter == 'info'">
	  				and info like '%'||#{keyword}||'%'
	  			</if>
  			</foreach>
  		</where>
  	</select>
  	
  	<select id="dynamicForeachWithList" resultType="map">
  		select * from book where title in
  		<foreach collection="list" item="title" open="(" close=")" separator=",">
  			#{title}
  		</foreach>
  	</select>
  	
  	<insert id="insertTemplate">
  		insert into ${tableName}
  		<!-- collection에 담기는 객체가 map일 경우 index 속성에 선언한 변수에 key값이 담김 -->
  		<if test="sec == null">
	  		<foreach collection="data" index="key" open="(" close=")" separator=",">
	  			${key}
	  		</foreach>
	  		values
	  		<foreach collection="data" item="val" open="(" close=")" separator=",">
	  			#{val}
	  		</foreach>
  		</if>
  		<if test="sec != null">
	  		<foreach collection="data" index="key" open="(" close="," separator=",">
	  			${key}
	  		</foreach>
	  		${sec.colName} ) values
	  		<foreach collection="data" item="val" open="(" close="," separator=",">
	  			#{val}
	  		</foreach>
	  		${sec.val} )
  		</if>
  	</insert>
  	
  	<update id="dynamicSet">
  		update member
  		<set>
	  		<if test="password != null">
	  			, password = #{password}
	  		</if>
	  		<if test="email != null">
	  			, email = #{email}
	  		</if>
	  		<if test="tell != null">
	  			, tell = #{tell}
	  		</if>
  		</set>
  		where user_id = #{userId}
  	</update>
  	
  </mapper>